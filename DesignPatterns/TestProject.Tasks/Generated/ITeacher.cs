// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace UserServiceClient
{
    using Models;

    /// <summary>
    /// Teacher operations.
    /// </summary>
    public partial interface ITeacher
    {
        /// <summary>
        /// 查询老师是否是结构化的用户
        /// 只要账号存在于学校管理后台，则认为是结构化的，否则为非结构化的
        /// </summary>
        /// <param name='teacherId'>
        /// 教师Id
        /// </param>
        /// <param name='sign'>
        /// 参数签名
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<ResponseEntityBoolean>> GetSFlagWithHttpMessagesAsync(int teacherId, string sign, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 根据老师Id获取老师信息
        /// </summary>
        /// <param name='teacherId'>
        /// 老师Id
        /// </param>
        /// <param name='sign'>
        /// 参数签名
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<ResponseEntityTTeacher>> GetTeacherInfoWithHttpMessagesAsync(int teacherId, string sign, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 根据学校Id获取老师列表，带分页
        /// </summary>
        /// <param name='schoolId'>
        /// 学校ID
        /// </param>
        /// <param name='pageIndex'>
        /// 页号
        /// </param>
        /// <param name='pageSize'>
        /// 页大小
        /// </param>
        /// <param name='sign'>
        /// 参数签名
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<PageResponseEntityListTTeacher>> GetPagedTeacherListWithHttpMessagesAsync(int schoolId, int pageIndex, int pageSize, string sign, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 根据学校Id和老师名称，模糊查询老师列表，带分页
        /// </summary>
        /// <param name='keyWords'>
        /// 模糊教师名称
        /// </param>
        /// <param name='schoolId'>
        /// 学校ID
        /// </param>
        /// <param name='pageIndex'>
        /// 页号
        /// </param>
        /// <param name='pageSize'>
        /// 页大小
        /// </param>
        /// <param name='sign'>
        /// 参数签名
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<PageResponseEntityListTTeacher>> GetPagedTeacherListByKeyWordsWithHttpMessagesAsync(string keyWords, int schoolId, int pageIndex, int pageSize, string sign, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 根据学校ID查询本学校所有老师信息
        /// </summary>
        /// <param name='schoolId'>
        /// 学校ID
        /// </param>
        /// <param name='sign'>
        /// 参数签名
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<ResponseEntityListTTeacher>> GetAllTeacherBySchoolIdWithHttpMessagesAsync(int schoolId, string sign, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
