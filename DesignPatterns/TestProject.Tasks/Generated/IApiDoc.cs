// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace UserServiceClient
{
    using Models;

    /// <summary>
    /// ApiDoc operations.
    /// </summary>
    public partial interface IApiDoc
    {
        /// <summary>
        /// 参数使用说明
        /// </summary>
        /// <remarks>
        /// 参数使用说明
        /// 假设传送的参数如下：
        /// A：	wxd930ea5d5a258f4f
        /// B：	10000100
        /// C：	1000
        /// F:   {a:123,b:"sdjj",c:{p:"th"}}
        /// 访问时A、B、C要放到QueryString中，F要放到Body中（F为对象参数、数组参数等非值类型参数，这种参数每个接口最多只能有一个，在调用这种包含这种类型的参数接口时Content-Type要指定为application/json）
        /// 参数中不要包含枚举类型
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse> ParamsDescriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 执行结果状态码说明
        /// </summary>
        /// <remarks>
        /// 执行结果状态码(ResponseEntity.Code)说明:
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse> CodeDescriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 执行结果状态码说明
        /// </summary>
        /// <remarks>
        /// 执行结果状态码(ResponseEntity.BussCode)说明:
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse> BussCodeDescriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 签名生成方法说明
        /// </summary>
        /// <remarks>
        /// 签名生成方法说明
        /// 假设传送的参数如下：
        /// A：	wxd930ea5d5a258f4f
        /// B：	10000100
        /// C：	1000
        /// D：	test
        /// E：	ibuaiVcKdpRxkhJA
        /// F:   {a:123,b:"sdjj",c:{p:"th"}}
        /// 第一步：对参数按照key=value的格式，并按照参数名ASCII字典序排序,如下：
        /// stringA  :
        /// A=wxd930ea5d5a258f4f&amp;amp;B=10000100&amp;amp;C=1000&amp;amp;D=test&amp;amp;E=ibuaiVcKdpRxkhJA&amp;amp;F={a:123,b:"sdjj",c:{p:"th"}}
        /// 第二步：拼接API密钥：
        /// stringSignTemp :
        /// A=wxd930ea5d5a258f4f&amp;amp;B=10000100&amp;amp;C=1000&amp;amp;D=test&amp;amp;E=ibuaiVcKdpRxkhJA&amp;amp;F={a:123,b:"sdjj",c:{p:"th"}}&amp;amp;key=192006250b4c09247ec02edce69f6a2d
        /// 第三步：生成sign：
        /// sign : MD5(stringSignTemp).toLowerCase()
        /// 备注：上方提到的F字段为对象，在拼接key=value值时，F中的字段要按升序排序，F中的嵌套对象也遵循该规则。
        /// 如果url参数中的字符串使用了urlencode，那么生成sign用到的值为urlencode之前的值。
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse> SignDescriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 签名生成校验
        /// </summary>
        /// <param name='sign'>
        /// 参数签名
        /// </param>
        /// <param name='a'>
        /// 参数A
        /// </param>
        /// <param name='b'>
        /// 参数B
        /// </param>
        /// <param name='c'>
        /// 参数C
        /// </param>
        /// <param name='d'>
        /// 参数D
        /// </param>
        /// <param name='e'>
        /// 参数E
        /// </param>
        /// <param name='f'>
        /// 参数F
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<ResponseEntityEDemo>> SignTestWithHttpMessagesAsync(string sign, string a, int b, int c, string d, string e, EDemo f, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<string>> SignTestPostWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<string>> GetResponseCodeDescriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.HttpOperationResponse<string>> GetResponseBussCodeDescriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
